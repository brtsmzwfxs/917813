local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local ato = Instance.new("TextButton")
local ToggleButton = Instance.new("TextButton")
local TitleLabel = Instance.new("TextLabel")

ScreenGui.Parent = game.CoreGui
ScreenGui.Name = "MainGUI"

local screenSize = workspace.CurrentCamera.ViewportSize

local centerX = (screenSize.X - 450) / 2
local centerY = (screenSize.Y - 300) / 2

Frame.Name = "Frame"
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
Frame.BackgroundTransparency = 0.4
Frame.Position = UDim2.new(0, centerX, 0, centerY)
Frame.Size = UDim2.new(0, 450, 0, 300)
Frame.Active = true
Frame.Draggable = true

local FrameCorner = Instance.new("UICorner")
FrameCorner.Parent = Frame
FrameCorner.CornerRadius = UDim.new(0, 12)

local GlowFrame = Instance.new("Frame")
GlowFrame.Name = "GlowFrame"
GlowFrame.Parent = Frame
GlowFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GlowFrame.BackgroundTransparency = 1
GlowFrame.Size = UDim2.new(1, 0, 1, 0)
GlowFrame.ZIndex = -1

local UIStroke = Instance.new("UIStroke")
UIStroke.Parent = Frame
UIStroke.Color = Color3.fromRGB(255, 0, 0)
UIStroke.Thickness = 3
UIStroke.Transparency = 0.3
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = Frame
TitleLabel.BackgroundTransparency = 1
TitleLabel.Position = UDim2.new(0, 10, 0, 10)
TitleLabel.Size = UDim2.new(0, 200, 0, 30)
TitleLabel.Text = "通用脚本"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextSize = 20
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
TitleLabel.Font = Enum.Font.SourceSansBold

local BasicButton = Instance.new("TextButton")
BasicButton.Name = "BasicButton"
BasicButton.Parent = Frame
BasicButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
BasicButton.BackgroundTransparency = 0.2
BasicButton.BorderSizePixel = 0
BasicButton.Position = UDim2.new(0, 20, 0, 50)
BasicButton.Size = UDim2.new(0, 80, 0, 30)
BasicButton.Text = "基础功能"
BasicButton.TextColor3 = Color3.fromRGB(255, 255, 255)
BasicButton.TextSize = 14
BasicButton.ZIndex = 2

local BasicButtonCorner = Instance.new("UICorner")
BasicButtonCorner.Parent = BasicButton
BasicButtonCorner.CornerRadius = UDim.new(0, 6)

local AdvancedButton = Instance.new("TextButton")
AdvancedButton.Name = "AdvancedButton"
AdvancedButton.Parent = Frame
AdvancedButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
AdvancedButton.BackgroundTransparency = 0.6
AdvancedButton.BorderSizePixel = 0
AdvancedButton.Position = UDim2.new(0, 110, 0, 50)
AdvancedButton.Size = UDim2.new(0, 80, 0, 30)
AdvancedButton.Text = "高级功能"
AdvancedButton.TextColor3 = Color3.fromRGB(200, 200, 200)
AdvancedButton.TextSize = 14
AdvancedButton.ZIndex = 2

local AdvancedButtonCorner = Instance.new("UICorner")
AdvancedButtonCorner.Parent = AdvancedButton
AdvancedButtonCorner.CornerRadius = UDim.new(0, 6)

local BasicFrame = Instance.new("Frame")
BasicFrame.Name = "BasicFrame"
BasicFrame.Parent = Frame
BasicFrame.BackgroundTransparency = 1
BasicFrame.Position = UDim2.new(0, 0, 0, 90)
BasicFrame.Size = UDim2.new(1, 0, 0, 210)
BasicFrame.Visible = true

local AdvancedFrame = Instance.new("Frame")
AdvancedFrame.Name = "AdvancedFrame"
AdvancedFrame.Parent = Frame
AdvancedFrame.BackgroundTransparency = 1
AdvancedFrame.Position = UDim2.new(0, 0, 0, 90)
AdvancedFrame.Size = UDim2.new(1, 0, 0, 210)
AdvancedFrame.Visible = false

local JumpLabel = Instance.new("TextLabel")
JumpLabel.Name = "JumpLabel"
JumpLabel.Parent = BasicFrame
JumpLabel.BackgroundTransparency = 1
JumpLabel.Position = UDim2.new(0, 20, 0, 10)
JumpLabel.Size = UDim2.new(0, 200, 0, 30)
JumpLabel.Text = "无限跳跃"
JumpLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
JumpLabel.TextSize = 18
JumpLabel.TextXAlignment = Enum.TextXAlignment.Left
JumpLabel.Font = Enum.Font.SourceSansBold

local JumpToggleBackground = Instance.new("TextButton")
JumpToggleBackground.Name = "JumpToggleBackground"
JumpToggleBackground.Parent = BasicFrame
JumpToggleBackground.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
JumpToggleBackground.BorderSizePixel = 0
JumpToggleBackground.Position = UDim2.new(0, 350, 0, 10)
JumpToggleBackground.Size = UDim2.new(0, 60, 0, 30)
JumpToggleBackground.Text = ""
JumpToggleBackground.Active = true

local JumpToggleBackgroundCorner = Instance.new("UICorner")
JumpToggleBackgroundCorner.Parent = JumpToggleBackground
JumpToggleBackgroundCorner.CornerRadius = UDim.new(0, 15)

local JumpToggleSlider = Instance.new("Frame")
JumpToggleSlider.Name = "JumpToggleSlider"
JumpToggleSlider.Parent = JumpToggleBackground
JumpToggleSlider.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
JumpToggleSlider.BorderSizePixel = 0
JumpToggleSlider.Size = UDim2.new(0, 30, 0, 30)
JumpToggleSlider.Position = UDim2.new(0, 0, 0, 0)

local JumpToggleSliderCorner = Instance.new("UICorner")
JumpToggleSliderCorner.Parent = JumpToggleSlider
JumpToggleSliderCorner.CornerRadius = UDim.new(0, 15)

local NoclipLabel = Instance.new("TextLabel")
NoclipLabel.Name = "NoclipLabel"
NoclipLabel.Parent = BasicFrame
NoclipLabel.BackgroundTransparency = 1
NoclipLabel.Position = UDim2.new(0, 20, 0, 50)
NoclipLabel.Size = UDim2.new(0, 200, 0, 30)
NoclipLabel.Text = "穿墙模式"
NoclipLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
NoclipLabel.TextSize = 18
NoclipLabel.TextXAlignment = Enum.TextXAlignment.Left
NoclipLabel.Font = Enum.Font.SourceSansBold

local NoclipToggleBackground = Instance.new("TextButton")
NoclipToggleBackground.Name = "NoclipToggleBackground"
NoclipToggleBackground.Parent = BasicFrame
NoclipToggleBackground.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
NoclipToggleBackground.BorderSizePixel = 0
NoclipToggleBackground.Position = UDim2.new(0, 350, 0, 50)
NoclipToggleBackground.Size = UDim2.new(0, 60, 0, 30)
NoclipToggleBackground.Text = ""
NoclipToggleBackground.Active = true

local NoclipToggleBackgroundCorner = Instance.new("UICorner")
NoclipToggleBackgroundCorner.Parent = NoclipToggleBackground
NoclipToggleBackgroundCorner.CornerRadius = UDim.new(0, 15)

local NoclipToggleSlider = Instance.new("Frame")
NoclipToggleSlider.Name = "NoclipToggleSlider"
NoclipToggleSlider.Parent = NoclipToggleBackground
NoclipToggleSlider.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
NoclipToggleSlider.BorderSizePixel = 0
NoclipToggleSlider.Size = UDim2.new(0, 30, 0, 30)
NoclipToggleSlider.Position = UDim2.new(0, 0, 0, 0)

local NoclipToggleSliderCorner = Instance.new("UICorner")
NoclipToggleSliderCorner.Parent = NoclipToggleSlider
NoclipToggleSliderCorner.CornerRadius = UDim.new(0, 15)

local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Name = "SpeedLabel"
SpeedLabel.Parent = BasicFrame
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.Position = UDim2.new(0, 20, 0, 90)
SpeedLabel.Size = UDim2.new(0, 200, 0, 30)
SpeedLabel.Text = "速度控制"
SpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedLabel.TextSize = 18
SpeedLabel.TextXAlignment = Enum.TextXAlignment.Left
SpeedLabel.Font = Enum.Font.SourceSansBold

local SpeedTextBox = Instance.new("TextBox")
SpeedTextBox.Name = "SpeedTextBox"
SpeedTextBox.Parent = BasicFrame
SpeedTextBox.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
SpeedTextBox.BackgroundTransparency = 0.5
SpeedTextBox.BorderSizePixel = 0
SpeedTextBox.Position = UDim2.new(0, 270, 0, 90)
SpeedTextBox.Size = UDim2.new(0, 60, 0, 30)
SpeedTextBox.Text = "16"
SpeedTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedTextBox.TextSize = 16
SpeedTextBox.TextXAlignment = Enum.TextXAlignment.Center
SpeedTextBox.PlaceholderColor3 = Color3.fromRGB(200, 200, 200)
SpeedTextBox.PlaceholderText = "速度"

local SpeedTextBoxCorner = Instance.new("UICorner")
SpeedTextBoxCorner.Parent = SpeedTextBox
SpeedTextBoxCorner.CornerRadius = UDim.new(0, 8)

local SpeedToggleBackground = Instance.new("TextButton")
SpeedToggleBackground.Name = "SpeedToggleBackground"
SpeedToggleBackground.Parent = BasicFrame
SpeedToggleBackground.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
SpeedToggleBackground.BorderSizePixel = 0
SpeedToggleBackground.Position = UDim2.new(0, 350, 0, 90)
SpeedToggleBackground.Size = UDim2.new(0, 60, 0, 30)
SpeedToggleBackground.Text = ""
SpeedToggleBackground.Active = true

local SpeedToggleBackgroundCorner = Instance.new("UICorner")
SpeedToggleBackgroundCorner.Parent = SpeedToggleBackground
SpeedToggleBackgroundCorner.CornerRadius = UDim.new(0, 15)

local SpeedToggleSlider = Instance.new("Frame")
SpeedToggleSlider.Name = "SpeedToggleSlider"
SpeedToggleSlider.Parent = SpeedToggleBackground
SpeedToggleSlider.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
SpeedToggleSlider.BorderSizePixel = 0
SpeedToggleSlider.Size = UDim2.new(0, 30, 0, 30)
SpeedToggleSlider.Position = UDim2.new(0, 0, 0, 0)

local SpeedToggleSliderCorner = Instance.new("UICorner")
SpeedToggleSliderCorner.Parent = SpeedToggleSlider
SpeedToggleSliderCorner.CornerRadius = UDim.new(0, 15)

local JumpPowerLabel = Instance.new("TextLabel")
JumpPowerLabel.Name = "JumpPowerLabel"
JumpPowerLabel.Parent = BasicFrame
JumpPowerLabel.BackgroundTransparency = 1
JumpPowerLabel.Position = UDim2.new(0, 20, 0, 130)
JumpPowerLabel.Size = UDim2.new(0, 200, 0, 30)
JumpPowerLabel.Text = "跳跃高度"
JumpPowerLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
JumpPowerLabel.TextSize = 18
JumpPowerLabel.TextXAlignment = Enum.TextXAlignment.Left
JumpPowerLabel.Font = Enum.Font.SourceSansBold

local JumpPowerTextBox = Instance.new("TextBox")
JumpPowerTextBox.Name = "JumpPowerTextBox"
JumpPowerTextBox.Parent = BasicFrame
JumpPowerTextBox.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
JumpPowerTextBox.BackgroundTransparency = 0.5
JumpPowerTextBox.BorderSizePixel = 0
JumpPowerTextBox.Position = UDim2.new(0, 270, 0, 130)
JumpPowerTextBox.Size = UDim2.new(0, 60, 0, 30)
JumpPowerTextBox.Text = "7.2"
JumpPowerTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
JumpPowerTextBox.TextSize = 16
JumpPowerTextBox.TextXAlignment = Enum.TextXAlignment.Center
JumpPowerTextBox.PlaceholderColor3 = Color3.fromRGB(200, 200, 200)
JumpPowerTextBox.PlaceholderText = "高度"

local JumpPowerTextBoxCorner = Instance.new("UICorner")
JumpPowerTextBoxCorner.Parent = JumpPowerTextBox
JumpPowerTextBoxCorner.CornerRadius = UDim.new(0, 8)

local JumpPowerToggleBackground = Instance.new("TextButton")
JumpPowerToggleBackground.Name = "JumpPowerToggleBackground"
JumpPowerToggleBackground.Parent = BasicFrame
JumpPowerToggleBackground.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
JumpPowerToggleBackground.BorderSizePixel = 0
JumpPowerToggleBackground.Position = UDim2.new(0, 350, 0, 130)
JumpPowerToggleBackground.Size = UDim2.new(0, 60, 0, 30)
JumpPowerToggleBackground.Text = ""
JumpPowerToggleBackground.Active = true

local JumpPowerToggleBackgroundCorner = Instance.new("UICorner")
JumpPowerToggleBackgroundCorner.Parent = JumpPowerToggleBackground
JumpPowerToggleBackgroundCorner.CornerRadius = UDim.new(0, 15)

local JumpPowerToggleSlider = Instance.new("Frame")
JumpPowerToggleSlider.Name = "JumpPowerToggleSlider"
JumpPowerToggleSlider.Parent = JumpPowerToggleBackground
JumpPowerToggleSlider.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
JumpPowerToggleSlider.BorderSizePixel = 0
JumpPowerToggleSlider.Size = UDim2.new(0, 30, 0, 30)
JumpPowerToggleSlider.Position = UDim2.new(0, 0, 0, 0)

local JumpPowerToggleSliderCorner = Instance.new("UICorner")
JumpPowerToggleSliderCorner.Parent = JumpPowerToggleSlider
JumpPowerToggleSliderCorner.CornerRadius = UDim.new(0, 15)

local GravityLabel = Instance.new("TextLabel")
GravityLabel.Name = "GravityLabel"
GravityLabel.Parent = BasicFrame
GravityLabel.BackgroundTransparency = 1
GravityLabel.Position = UDim2.new(0, 20, 0, 170)
GravityLabel.Size = UDim2.new(0, 200, 0, 30)
GravityLabel.Text = "重力控制"
GravityLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
GravityLabel.TextSize = 18
GravityLabel.TextXAlignment = Enum.TextXAlignment.Left
GravityLabel.Font = Enum.Font.SourceSansBold

local GravityTextBox = Instance.new("TextBox")
GravityTextBox.Name = "GravityTextBox"
GravityTextBox.Parent = BasicFrame
GravityTextBox.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
GravityTextBox.BackgroundTransparency = 0.5
GravityTextBox.BorderSizePixel = 0
GravityTextBox.Position = UDim2.new(0, 270, 0, 170)
GravityTextBox.Size = UDim2.new(0, 60, 0, 30)
GravityTextBox.Text = "196.2"
GravityTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
GravityTextBox.TextSize = 16
GravityTextBox.TextXAlignment = Enum.TextXAlignment.Center
GravityTextBox.PlaceholderColor3 = Color3.fromRGB(200, 200, 200)
GravityTextBox.PlaceholderText = "重力"

local GravityTextBoxCorner = Instance.new("UICorner")
GravityTextBoxCorner.Parent = GravityTextBox
GravityTextBoxCorner.CornerRadius = UDim.new(0, 8)

local GravityToggleBackground = Instance.new("TextButton")
GravityToggleBackground.Name = "GravityToggleBackground"
GravityToggleBackground.Parent = BasicFrame
GravityToggleBackground.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
GravityToggleBackground.BorderSizePixel = 0
GravityToggleBackground.Position = UDim2.new(0, 350, 0, 170)
GravityToggleBackground.Size = UDim2.new(0, 60, 0, 30)
GravityToggleBackground.Text = ""
GravityToggleBackground.Active = true

local GravityToggleBackgroundCorner = Instance.new("UICorner")
GravityToggleBackgroundCorner.Parent = GravityToggleBackground
GravityToggleBackgroundCorner.CornerRadius = UDim.new(0, 15)

local GravityToggleSlider = Instance.new("Frame")
GravityToggleSlider.Name = "GravityToggleSlider"
GravityToggleSlider.Parent = GravityToggleBackground
GravityToggleSlider.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
GravityToggleSlider.BorderSizePixel = 0
GravityToggleSlider.Size = UDim2.new(0, 30, 0, 30)
GravityToggleSlider.Position = UDim2.new(0, 0, 0, 0)

local GravityToggleSliderCorner = Instance.new("UICorner")
GravityToggleSliderCorner.Parent = GravityToggleSlider
GravityToggleSliderCorner.CornerRadius = UDim.new(0, 15)

ToggleButton.Name = "ToggleButton"
ToggleButton.Parent = ScreenGui
ToggleButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
ToggleButton.BackgroundTransparency = 0.4
ToggleButton.Position = UDim2.new(0, 10, 0, 10)
ToggleButton.Size = UDim2.new(0, 50, 0, 50)
ToggleButton.Text = "隐藏"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 14
ToggleButton.Active = true
ToggleButton.Draggable = true

local ToggleButtonCorner = Instance.new("UICorner")
ToggleButtonCorner.Parent = ToggleButton
ToggleButtonCorner.CornerRadius = UDim.new(0, 12)

local player = game.Players.LocalPlayer

local character = nil
local originalWalkSpeed = 16
local originalJumpHeight = 7.2
local originalGravity = workspace.Gravity
local InfiniteJumpEnabled = false
local NoclipEnabled = false
local SpeedEnabled = false
local JumpPowerEnabled = false
local GravityEnabled = false
local isJumpAnimating = false
local isNoclipAnimating = false
local isSpeedAnimating = false
local isJumpPowerAnimating = false
local isGravityAnimating = false
local SteppedConnection = nil
local speedConnection = nil

local function initializeCharacter()
    character = player.Character or player.CharacterAdded:Wait()
    
    if character and character:FindFirstChildOfClass("Humanoid") then
        originalWalkSpeed = character:FindFirstChildOfClass("Humanoid").WalkSpeed
        originalJumpHeight = character:FindFirstChildOfClass("Humanoid").JumpHeight
    end
    
    if SpeedEnabled and character and character:FindFirstChildOfClass("Humanoid") then
        local value = tonumber(SpeedTextBox.Text)
        if value then
            character:FindFirstChildOfClass("Humanoid").WalkSpeed = value
        end
    end
    
    if JumpPowerEnabled and character and character:FindFirstChildOfClass("Humanoid") then
        local value = tonumber(JumpPowerTextBox.Text)
        if value then
            character:FindFirstChildOfClass("Humanoid").JumpHeight = value
        end
    end
end

player.CharacterAdded:Connect(function(newCharacter)
    initializeCharacter()
end)

initializeCharacter()

JumpToggleBackground.MouseButton1Click:Connect(function()
    if isJumpAnimating then return end
    
    InfiniteJumpEnabled = not InfiniteJumpEnabled
    isJumpAnimating = true
    
    local targetPosition
    if InfiniteJumpEnabled then
        targetPosition = UDim2.new(0, 30, 0, 0)
        JumpToggleBackground.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
    else
        targetPosition = UDim2.new(0, 0, 0, 0)
        JumpToggleBackground.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    end
    
    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = game:GetService("TweenService"):Create(JumpToggleSlider, tweenInfo, {Position = targetPosition})
    tween:Play()
    
    tween.Completed:Connect(function()
        isJumpAnimating = false
    end)
end)

game:GetService("UserInputService").JumpRequest:connect(function()
    if InfiniteJumpEnabled and character and character:FindFirstChildOfClass'Humanoid' then
        character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
    end
end)

NoclipToggleBackground.MouseButton1Click:Connect(function()
    if isNoclipAnimating then return end
    
    NoclipEnabled = not NoclipEnabled
    isNoclipAnimating = true
    
    local targetPosition
    if NoclipEnabled then
        targetPosition = UDim2.new(0, 30, 0, 0)
        NoclipToggleBackground.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        
        if SteppedConnection then
            SteppedConnection:Disconnect()
        end
        
        SteppedConnection = game:GetService("RunService").Stepped:Connect(function()
            if character and NoclipEnabled then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        targetPosition = UDim2.new(0, 0, 0, 0)
        NoclipToggleBackground.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        
        if SteppedConnection then
            SteppedConnection:Disconnect()
            SteppedConnection = nil
        end
        
        if character then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
    
    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = game:GetService("TweenService"):Create(NoclipToggleSlider, tweenInfo, {Position = targetPosition})
    tween:Play()
    
    tween.Completed:Connect(function()
        isNoclipAnimating = false
    end)
end)

SpeedToggleBackground.MouseButton1Click:Connect(function()
    if isSpeedAnimating then return end
    
    SpeedEnabled = not SpeedEnabled
    isSpeedAnimating = true
    
    local targetPosition
    if SpeedEnabled then
        targetPosition = UDim2.new(0, 30, 0, 0)
        SpeedToggleBackground.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        
        if character and character:FindFirstChildOfClass("Humanoid") then
            local value = tonumber(SpeedTextBox.Text)
            if value then
                character:FindFirstChildOfClass("Humanoid").WalkSpeed = value
            end
        end
    else
        targetPosition = UDim2.new(0, 0, 0, 0)
        SpeedToggleBackground.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        
        if character and character:FindFirstChildOfClass("Humanoid") then
            character:FindFirstChildOfClass("Humanoid").WalkSpeed = originalWalkSpeed
        end
    end
    
    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = game:GetService("TweenService"):Create(SpeedToggleSlider, tweenInfo, {Position = targetPosition})
    tween:Play()
    
    tween.Completed:Connect(function()
        isSpeedAnimating = false
    end)
end)

JumpPowerToggleBackground.MouseButton1Click:Connect(function()
    if isJumpPowerAnimating then return end
    
    JumpPowerEnabled = not JumpPowerEnabled
    isJumpPowerAnimating = true
    
    local targetPosition
    if JumpPowerEnabled then
        targetPosition = UDim2.new(0, 30, 0, 0)
        JumpPowerToggleBackground.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        
        if character and character:FindFirstChildOfClass("Humanoid") then
            local value = tonumber(JumpPowerTextBox.Text)
            if value then
                character:FindFirstChildOfClass("Humanoid").JumpHeight = value
            end
        end
    else
        targetPosition = UDim2.new(0, 0, 0, 0)
        JumpPowerToggleBackground.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        
        if character and character:FindFirstChildOfClass("Humanoid") then
            character:FindFirstChildOfClass("Humanoid").JumpHeight = originalJumpHeight
        end
    end
    
    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = game:GetService("TweenService"):Create(JumpPowerToggleSlider, tweenInfo, {Position = targetPosition})
    tween:Play()
    
    tween.Completed:Connect(function()
        isJumpPowerAnimating = false
    end)
end)

GravityToggleBackground.MouseButton1Click:Connect(function()
    if isGravityAnimating then return end
    
    GravityEnabled = not GravityEnabled
    isGravityAnimating = true
    
    local targetPosition
    if GravityEnabled then
        targetPosition = UDim2.new(0, 30, 0, 0)
        GravityToggleBackground.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        
        local value = tonumber(GravityTextBox.Text)
        if value then
            workspace.Gravity = value
        end
    else
        targetPosition = UDim2.new(0, 0, 0, 0)
        GravityToggleBackground.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        
        workspace.Gravity = originalGravity
    end
    
    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = game:GetService("TweenService"):Create(GravityToggleSlider, tweenInfo, {Position = targetPosition})
    tween:Play()
    
    tween.Completed:Connect(function()
        isGravityAnimating = false
    end)
end)

if speedConnection then
    speedConnection:Disconnect()
end

speedConnection = game:GetService("RunService").RenderStepped:Connect(function()
    if SpeedEnabled and character and character:FindFirstChildOfClass("Humanoid") then
        local value = tonumber(SpeedTextBox.Text)
        if value then
            character:FindFirstChildOfClass("Humanoid").WalkSpeed = value
        end
    end
end)

JumpPowerTextBox:GetPropertyChangedSignal("Text"):Connect(function()
    if JumpPowerEnabled and character and character:FindFirstChildOfClass("Humanoid") then
        local value = tonumber(JumpPowerTextBox.Text)
        if value then
            character:FindFirstChildOfClass("Humanoid").JumpHeight = value
        end
    end
end)

GravityTextBox:GetPropertyChangedSignal("Text"):Connect(function()
    if GravityEnabled then
        local value = tonumber(GravityTextBox.Text)
        if value then
            workspace.Gravity = value
        end
    end
end)

local isVisible = true
ToggleButton.MouseButton1Click:Connect(function()
    isVisible = not isVisible
    Frame.Visible = isVisible
    if isVisible then
        ToggleButton.Text = "隐藏"
    else
        ToggleButton.Text = "显示"
    end
end)

BasicButton.MouseButton1Click:Connect(function()
    BasicFrame.Visible = true
    AdvancedFrame.Visible = false
    BasicButton.BackgroundTransparency = 0.2
    BasicButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    AdvancedButton.BackgroundTransparency = 0.6
    AdvancedButton.TextColor3 = Color3.fromRGB(200, 200, 200)
end)

AdvancedButton.MouseButton1Click:Connect(function()
    BasicFrame.Visible = false
    AdvancedFrame.Visible = true
    AdvancedButton.BackgroundTransparency = 0.2
    AdvancedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    BasicButton.BackgroundTransparency = 0.6
    BasicButton.TextColor3 = Color3.fromRGB(200, 200, 200)
end)

local colorTime = 0
game:GetService("RunService").RenderStepped:Connect(function(deltaTime)
    colorTime = colorTime + deltaTime
    
    local r = math.sin(colorTime * 0.5) * 0.5 + 0.5
    local g = math.sin(colorTime * 0.5 + 2) * 0.5 + 0.5
    local b = math.sin(colorTime * 0.5 + 4) * 0.5 + 0.5
    
    UIStroke.Color = Color3.new(r, g, b)
end)

local touchStartPosition = nil
local buttonStartPosition = nil
local isDragging = false

ToggleButton.TouchLongPress:Connect(function(touchPositions)
    touchStartPosition = Vector2.new(touchPositions[1].X, touchPositions[1].Y)
    buttonStartPosition = ToggleButton.Position
    isDragging = true
end)

ToggleButton.TouchMoved:Connect(function(touchPosition)
    if touchStartPosition and buttonStartPosition then
        local delta = Vector2.new(touchPosition.X, touchPosition.Y) - touchStartPosition
        ToggleButton.Position = UDim2.new(
            buttonStartPosition.X.Scale, 
            buttonStartPosition.X.Offset + delta.X,
            buttonStartPosition.Y.Scale, 
            buttonStartPosition.Y.Offset + delta.Y
        )
    end
end)

ToggleButton.TouchEnded:Connect(function()
    if isDragging then
        wait(0.2)
        isDragging = false
    end
    touchStartPosition = nil
    buttonStartPosition = nil
end)

ToggleButton.TouchTap:Connect(function(touchPositions)
    if not isDragging then
        isVisible = not isVisible
        Frame.Visible = isVisible
        if isVisible then
            ToggleButton.Text = "隐藏"
        else
            ToggleButton.Text = "显示"
        end
    end
end)

ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
